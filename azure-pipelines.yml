# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
- group: Artifactory-Package-Publish

resources:
  containers:
  - container: ubuntu
    image:  wpilib/ubuntu-base:18.04

stages:
- stage: Build
  jobs:
  - job: Linux
    pool:
      vmImage: 'Ubuntu 16.04'

    container: ubuntu

    steps:
      - checkout: self
        submodules: true
      - script: |
          sudo apt-get update && sudo apt-get install -y libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev mesa-common-dev libvulkan-dev
        displayName: 'Install dependencies'
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'
          # checkStyleRunAnalysis: true
          # pmdRunAnalysis: true

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'Linux'
          targetPath: 'build/allOutputs'

  - job: Windows_64_Bit
    pool:
      vmImage: 'windows-2019'
    steps:
      - checkout: self
        submodules: true
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          jdkVersionOption: '1.11'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'
          options: '-PskipPMD'
          # checkStyleRunAnalysis: true
          # pmdRunAnalysis: true

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'Win64'
          targetPath: 'build/allOutputs'

  - job: Windows_32_Bit
    pool:
      vmImage: 'windows-2019'
    steps:
      - checkout: self
        submodules: true
      - powershell: |
          mkdir build
          $ProgressPreference = 'SilentlyContinue'
          wget "https://github.com/wpilibsuite/frc-openjdk-windows/releases/download/v11.0.0u28-1/jdk-x86-11.0.0u28-1.zip" -O "build\jdk.zip"
        displayName: 'Download JDK'
      - task: JavaToolInstaller@0
        inputs:
          jdkSourceOption: localDirectory
          jdkFile: 'build/jdk.zip'
          jdkDestinationDirectory: 'build/jdkinst'
          jdkArchitectureOption: x86
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx1024m'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'
          options: '-PskipPMD'
          # checkStyleRunAnalysis: true
          # pmdRunAnalysis: true
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'Win32'
          targetPath: 'build/allOutputs'

  - job: Mac
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - checkout: self
        submodules: true
      - script: |
          mkdir build
          export JAVA_HOME=`/usr/libexec/java_home -v 11`
        displayName: 'Setup JDK'
      - script: |
          rm /Users/vsts/.gradle/init.d/log-gradle-version-plugin.gradle
        displayName: 'Delete Version init script'
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          jdkVersionOption: '1.11'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'
          #options: ''
          # checkStyleRunAnalysis: true
          # pmdRunAnalysis: true

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'Mac'
          targetPath: 'build/allOutputs'

- stage: Combine
  jobs:
  - job: CombineJob
    pool:
      vmImage: 'macOS-10.14'

    steps:
    - checkout: none
    - script: |
        git clone https://github.com/thadhouse/build-tools
      displayName: 'Clone Combiner'
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'Mac'
        targetPath: 'build-tools/combiner/products/build/allOutputs'
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'Win32'
        targetPath: 'build-tools/combiner/products/build/allOutputs'
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'Win64'
        targetPath: 'build-tools/combiner/products/build/allOutputs'
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'Linux'
        targetPath: 'build-tools/combiner/products/build/allOutputs'

    - task: Gradle@2
      inputs:
        workingDirectory: 'build-tools/combiner'
        gradleWrapperFile: 'build-tools/combiner/gradlew'
        gradleOptions: '-Xmx3072m'
        tasks: 'publish '
        options: '-Pthirdparty'
      env:
        ARTIFACTORY_PUBLISH_USERNAME: $(PublishUserName)
        ARTIFACTORY_PUBLISH_PASSWORD: $(PublishPassword)

    - task: Gradle@2
      inputs:
        workingDirectory: 'build-tools/combiner'
        gradleWrapperFile: 'build-tools/combiner/gradlew'
        gradleOptions: '-Xmx3072m'
        tasks: 'publish '
        options: '-Pthirdparty -PreleaseRepoPublish'
      env:
        ARTIFACTORY_PUBLISH_USERNAME: $(PublishUserName)
        ARTIFACTORY_PUBLISH_PASSWORD: $(PublishPassword)
    - script: |
        echo "##vso[task.setvariable variable=UserHome]$HOME"
      displayName: 'Set Home Variable'
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'Maven'
        targetPath: $(UserHome)/releases
